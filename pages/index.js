import { useState, useEffect, useRef } from 'react';
import Head from 'next/head';
import Image from 'next/image';

import styles from '@/styles/Home.module.css';
import readFileInFolder from '@/utils/read-folder';
import { cursorPlace, getCursorBackground } from '@/utils/curso-funcs';

export default function Home({ fileNames }) {
  const [imageSource, setimageSource] = useState(0);
  const imageContainer = useRef(null);
  const cursor = useRef(null);
  const imageToZoom = useRef(null);
  const imageToZoomSrc = "/assets/" + fileNames[imageSource];

  const handleImageClick = (ev, id) => {
    ev.preventDefault();
    setimageSource(id);
  }
  
  useEffect(() => {
    if (imageContainer.current && cursor.current&& imageToZoom.current) {
      console.info(cursor.current, imageToZoom.current);
      cursor.current.style.backgroundImage = "url(" + imageToZoomSrc + ")";
      imageContainer.current.addEventListener('mousemove', function (ev) {
        cursorPlace(cursor, ev.clientX, ev.clientY);
        getCursorBackground(cursor, imageToZoom, ev.clientX, ev.clientY);
      });
    }
    
    return imageContainer.current.removeEventListener('mousemove', function (ev) {
      cursorPlace(cursor, ev.clientX, ev.clientY);
      getCursorBackground(cursor, imageToZoom, ev.clientX, ev.clientY);
    })
  }, [imageSource]);
  return (
    <>
      <Head>
        <title>test dev zoom</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.header}>
          {fileNames.map((fileName, index) => (
            <div
              key={fileName}
              onClick={(ev) => handleImageClick(ev, index)}
              className={styles.target}
            >
              <Image src={`/assets/${fileName}`} alt={fileName} width={300} height={300} />
            </div>
          ))}
        </div>
        <div
          ref={imageContainer}
          className={`${styles.content} image-container`}
        >
          <div ref={cursor} className={styles.cursor} />
          <Image
            className={styles.imagetozoom}
            ref={imageToZoom}
            src={`/assets/${fileNames[imageSource]}`}
            alt={fileNames[imageSource]}
            width={500}
            height={500}
          />
        </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
  const fileNames = readFileInFolder('public/assets');
  return {
    props: {
      fileNames
    }
  }
};
